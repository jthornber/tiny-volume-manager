* Interface Scenarios [0/4]
  
We need many more tests, particularly ones that check the correctness
of the interface.

  - [ ] check all status fields for correctness (format/values)

  - [ ] is the low_water_mark being acted upon correctly?
    - is it given in blocks or sectors?
    - does it send the event at the correct level?  (tests with a variety of levels, including 0)
    - does it only send 1 event?
    - does a reload (not resize) trigger a subsequent event (it should)?
  
  - [ ] is the free data space reported correctly?
    - If there is no free space does provisioning a new block ... err ... block?
  
  - [ ] is the free metadata reported correctly?

  - [ ] check we have tests for transaction id (I think I already did these)
    - getting old transaction id wrong results in failure of the ioctl.
    - status reports new one

* Multiple pool scenarios

Very similar to the current bunch of tests, except we want things
happening in parallel on separate pools.  Be nice to reuse existing
code.  Have to get the TinyVolumeManager up and running first.

Created a couple of useful ones

* Infrastructure

  - [X] Implement a little TinyVolumeManager class, that creates
    linear volumes that we can use as metadata or data devices.  Keep
    this very simple - linear volumes only.

  - Aggregate results from several tests runs

  - [X] add tags support

  - move thinp tests into a subdirectory, ready for the raid suite

  - capture key details about the machine (mem, disks, cpu, kernel
    version, loaded modules, uptime, name, architecture)

  - automate sending the results to a central collator

  - [ ] add xml writer to xml_format*.rb
